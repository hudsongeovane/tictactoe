{"version":3,"sources":["logo.svg","Components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","_this","this","react_default","a","createElement","className","onClick","props","value","React","Component","Board","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","boardstatus","Array","fill","xNext","i","_this3","Components_Square","handleClick","squares","slice","setState","m","board","bestMoveScore","move","winner","movesMade","length","newBoard","validMove","minPlayer","moveScore","maxScore","findAiMove","console","log","renderSquare","Game","_this4","nextPlayer","status","Components_Board","maxPlayer","player","tie","minScore","depth","bestMoveValue","predictedMoveValue","copyBoard","App","Components","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc844f54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './App.css'\n\nclass Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\" onClick={() => this.props.onClick() }>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardstatus: Array(9).fill(null),\n      xNext: true,\n    };\n  }\n  renderSquare(i) {\n    return <Square value={this.state.boardstatus[i]} onClick={() => this.handleClick(i)} />;\n  }\n  handleClick(i) {\n    const squares = this.state.boardstatus.slice();\n    if (squares[i] == null) { //For not clicking the same button twice.\n      squares[i] = 'X';//this.state.xNext ? 'X' : 'O';\n      this.setState({boardstatus: squares, xNext: !this.state.xNext});\n      var m = findAiMove(squares);\n      console.log(m);\n      squares[m] = 'O';\n      this.setState({boardstatus: squares, xNext: !this.state.xNext});\n    }\n  }\n  render() {\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nextPlayer: 'X',\n    };\n  }\n  render() {\n    const status = 'Next player:' + this.state.nextPlayer;\n\n    return (\n      <div>\n        <div>\n          <div className=\"status\">{status}</div>\n          <Board />\n        </div>\n        <div>\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\nvar maxPlayer = 'X';\nvar minPlayer = 'O';\n\n\nfunction copyBoard(board) {\n  return board.slice(0);\n}\nfunction winner(board, player){\n  if (\n        (board[0] === player && board[1] === player && board[2] === player) ||\n        (board[3] === player && board[4] === player && board[5] === player) ||\n        (board[6] === player && board[7] === player && board[8] === player) ||\n        (board[0] === player && board[3] === player && board[6] === player) ||\n        (board[1] === player && board[4] === player && board[7] === player) ||\n        (board[2] === player && board[5] === player && board[8] === player) ||\n        (board[0] === player && board[4] === player && board[8] === player) ||\n        (board[2] === player && board[4] === player && board[6] === player)\n        ) {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction tie(board) {\n  for(let i = 0; i < 9; i++) {\n    if (board[i] !== 'X' && board[i] !== 'O') return false;\n  }\n  return true;\n}\nfunction findAiMove(board) {\n  var bestMoveScore = 100;\n  let move = null;\n  //Test Every Possible Move if the game is not already over.\n  if(winner(board, 'X') || winner(board, 'O' || tie(board))) {\n    return null;\n  }\n  let movesMade = 0;\n  for(let i = 0; i < board.length; i++) {\n    if (board[i] != null) movesMade++;\n  }\n\n  for(var i = 0; i < board.length; i++){\n    let newBoard = validMove(i, minPlayer, board);\n    if(newBoard) {\n      var moveScore = maxScore(newBoard,9 - movesMade);\n      if (moveScore < bestMoveScore) {\n        bestMoveScore = moveScore;\n        move = i;\n      }\n    }\n  }\n  return move;\n}\n\nfunction minScore(board,depth) {\n  if (winner(board, 'X')) {\n    return 10;\n  } else if (winner(board, 'O')) {\n    return -10;\n  } else if (tie(board)) {\n    return 0;\n  } else if (depth == 0) {\n    console.log(depth);\n    return 0;\n  } else {\n    var bestMoveValue = 100;\n    let move = 0;\n    for (var i = 0; i < board.length; i++) {\n      var newBoard = validMove(i, minPlayer, board);\n      if (newBoard) {\n        var predictedMoveValue = maxScore(newBoard,depth-1);\n        if (predictedMoveValue < bestMoveValue) {\n          bestMoveValue = predictedMoveValue;\n          move = i;\n        }\n      }\n    }\n    return bestMoveValue;\n  }\n}\nfunction maxScore(board,depth) {\n   if(winner(board, 'X')) {\n    return 10;\n  } else if(winner(board, 'O')) {\n    return -10;\n  } else if(tie(board)) {\n    return 0;\n  } else if (depth == 0) {\n    return 0;\n  } else {\n    var bestMoveValue = -100;\n    let move = 0;\n    for (var i = 0; i < board.length; i++) {\n      var newBoard = validMove(i, maxPlayer, board);\n      if (newBoard) {\n        var predictedMoveValue = minScore(newBoard,depth-1);\n        if (predictedMoveValue > bestMoveValue) {\n          bestMoveValue = predictedMoveValue;\n          move = i;\n        }\n      }\n    }\n    return bestMoveValue;\n  }\n}\n\nfunction validMove(move, player, board){\n  var newBoard = copyBoard(board);\n  if(newBoard[move] === null){\n    newBoard[move] = player;\n    return newBoard;\n  } else\n    return null;\n}\n\nexport default Game;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from './Components'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Game />\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header>\n        <p className=\"App-intro\">\n          To get started, edit <code>src/App.js</code> and save to reload.\n        </p>\n\n      </div>\n);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}